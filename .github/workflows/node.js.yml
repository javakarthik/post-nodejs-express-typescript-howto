# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions test

name: CI Feature1

on:
  push:
    branches: [ feature1 ]
  pull_request:
    branches: [ Develop ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [15.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}    
    - run: npm ci
    - run: npm run build --if-present   
    - run: npm test --coverage=true
    - name: Run unit test
      uses: mattallty/jest-github-action@v1.0.3
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # this is just an example, this could be any command that will trigger jest
        test-command: "npm test --coverage"
        #coverage-comment: true
    #- run: npm test 
       
    - name: Run linters & prettier
      uses: wearerequired/lint-action@v1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        # Enable linters
        eslint: true
        prettier: true
    
    #- name: Static Analysis with Polaris Action
     # uses: devsecops-test/polaris-action@v1
     # with:
     #   polarisServerUrl: ${{secrets.POLARIS_SERVER_URL_CSPROD}}
     #   polarisAccessToken: ${{secrets.POLARIS_ACCESS_TOKEN_CSPROD}}
      #  polarisProjectName: polaris-action-sample
       
   # -- Build your project here -- eg. mvn clean package
    #- name: Polaris
     # uses: blackducksoftware/github-action@2.0.1
     # with:
       # args: --polaris.url="${{ secrets.POLARIS_URL}}" --polaris.access.token="${{ secrets.POLARIS_TOKEN}}" --detect.tools="POLARIS"
    #- name: Synopsys Detect
    #  uses: blackducksoftware/github-action@2.0.0
    #  with:
    #    args: '--blackduck.url="${{ secrets.BLACKDUCK_URL}}" --blackduck.api.token="${{ secrets.BLACKDUCK_API_TOKEN}}" --detect.risk.report.pdf=true'

